var ghost = require(process.argv[2]+'/mc/cfg/ghost.js'); 
var gapi = require(process.argv[2]+'/mc/cmn/gapi.js'); 

exports.itfconf = function() {
        return new CurrentAPI().conf();
}

exports.itfleft = function(req,res,fld,fle) {
        return new CurrentAPI().output(req,res,fld,fle);
}

var CurrentAPI = gapi.BaseAPI.extend({
    conf: function() { return { auth: false,
                type: "json",
                itfs: [{
                    host: ghost.dscm.mcc.addr,
                    port: ghost.dscm.mcc.port,
                    iurl: "/areasService?actn=selectCitiesByProvinceId",
                    uuid: "areasService",
                    meth: "post",
                    type: "sdcm",
                    next: [],
                    func: function(req,res,fld,fle){
                        return new CurrentAPI("areasService").
                            callFunc(req,res,fld,fle);
                    }                
                }]
        };
    },

    doCallFunc: function(uuid, req, res, fld, fle) {
        var ip = gapi.getIPv4(req.user.addr);
        var provinceId = gapi.getParameter(req, "provinceId");

        if(gapi.emptyEqual(provinceId ,"")) {
            res.jsonp(gapi.toResult(1, "参数错误"));
            ghost.getLogger().info("[doLogin]IP：%s, message:param error, param: provinceId=%s", ip, provinceId);
            return null;
        }             

        return { "claz" : "['int']",
           "json" : [provinceId]
        };        
    },

    doOutput: function(req, res, fld, fle) {
        var ip = gapi.getIPv4(req.user.addr);
        var rslt = req.rslt['areasService'];
        if(rslt == null){
            ghost.getLogger().error("[doOutput]IP：%s, areasService, 'rslt is null', rslt: %s", 
                ip, JSON.stringify(req.rslt));
            return gapi.toResult(500, "系统异常");
        } 

        console.log(JSON.stringify(rslt));     

        return gapi.toResult(0, "succ",{data:rslt});
    }
});

