var ghost = require(process.argv[2]+'/wx/cfg/ghost.js'); 
var gapi = require(process.argv[2]+'/wx/cmn/gapi.js'); 

exports.itfconf = function() {
        return new CurrentAPI().conf();
}

exports.itfleft = function(req,res,fld,fle) {
        return new CurrentAPI().output(req,res,fld,fle);
}

var CurrentAPI = gapi.BaseAPI.extend({
    conf: function() { return { auth: false,
                type: "json",
                itfs: [{
                    host: ghost.dscm.center.addr,
                    port: ghost.dscm.center.port,
                    iurl: "/contentApp?actn=findById",
                    uuid: "contentApp",
                    meth: "post",
                    type: "sdcm",
                    next: [],
                    func: function(req,res,fld,fle){
                        return new CurrentAPI("contentApp").
                            callFunc(req,res,fld,fle);
                    }                
                }]
        };
    },

    doCallFunc: function(uuid, req, res, fld, fle) {
        var ip = gapi.getIPv4(req.user.addr);
        var id = gapi.getParameter(req, "id");
        var size = gapi.getParameter(req, "size");
        var start = gapi.getParameter(req, "start");
        var userId = 0;
        if(req.session.user && req.session.user.id != null) {
            userId = req.session.user.id;
        }

        if(gapi.emptyEqual(id ,"")) {
            res.jsonp(gapi.toResult(1, "参数错误"));
            ghost.getLogger().info("[doLogin]IP：%s, message:param error, param: id=%s", ip, id);
            return null;
        }        

        if(gapi.emptyEqual(start ,"")) {
            start = 0 ;
        }

        if(gapi.emptyEqual(size ,"")) {
            size = 5 ;
        } 

        if(size > 5) {
            size = 5;
        }       

        return { "claz" : "['java.lang.Long','java.lang.Long','java.lang.Integer','java.lang.Integer']",
           "json" : [id, userId, start, size]
        };        
    },

    doOutput: function(req, res, fld, fle) {
        var ip = gapi.getIPv4(req.user.addr);
        var rslt = req.rslt['contentApp'];
        if(rslt == null){
            ghost.getLogger().error("[doOutput]IP：%s, contentApp, 'rslt is null', rslt: %s", 
                ip, JSON.stringify(req.rslt));
            return gapi.toResult(500, "系统异常");
        } 

        console.log(JSON.stringify(rslt));     

        return gapi.toResult(0, "succ",{data:rslt});
    }
});

